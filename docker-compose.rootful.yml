version: '3.8'

# Rootful Docker Compose configuration for root-based containers
# Use this if you need to run containers as root for compatibility reasons

services:
  oci-gateway:
    build: .
    image: ghcr.io/${GITHUB_REPOSITORY:-local/oci-gateway}:latest
    env_file:
      - ${XDG_CONFIG_HOME:-~/.config}/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}.${TIN_ENVIRONMENT:-prod}.env
    environment:
      # OCI configuration from secrets
      TF_VAR_tenancy_ocid: ${OCI_TENANCY_OCID}
      TF_VAR_user_ocid: ${OCI_USER_OCID}
      TF_VAR_fingerprint: ${OCI_FINGERPRINT}
      TF_VAR_region: ${OCI_REGION}
      TF_VAR_compartment_id: ${OCI_COMPARTMENT_ID}
      TF_VAR_availability_domain: ${OCI_AVAILABILITY_DOMAIN}
      # SSH public key is read from file by terraform_deploy.py
      OCI_SSH_PUBLIC_KEY_PATH: ${OCI_SSH_PUBLIC_KEY_PATH}
      # XDG paths
      XDG_DATA_HOME: /data
      XDG_CONFIG_HOME: /config
      XDG_STATE_HOME: /state
      TIN_NAMESPACE: ${TIN_NAMESPACE:-dynamicalsystem}
      TIN_SERVICE: ${TIN_SERVICE:-gateway}
      # Legacy mode flag
      USE_RESOURCE_MANAGER: ${USE_RESOURCE_MANAGER:-false}
    secrets:
      - oci_private_key
    volumes:
      # Mount XDG directories (root-based)
      - ${XDG_DATA_HOME:-~/.local/share}/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}:/data/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}
      - ${XDG_CONFIG_HOME:-~/.config}/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}:/config/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}
      - ${XDG_STATE_HOME:-~/.local/state}/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}:/state/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}
    command: ${USE_RESOURCE_MANAGER:+uv run main.py}
    restart: unless-stopped
    # Note: No user override - runs as root

secrets:
  oci_private_key:
    file: ${OCI_PRIVATE_KEY_PATH:-${XDG_DATA_HOME:-~/.local/share}/${TIN_NAMESPACE:-dynamicalsystem}/${TIN_SERVICE:-gateway}/oci/oci_api_key.pem}