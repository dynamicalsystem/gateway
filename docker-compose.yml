services:
  gateway:
    build:
      context: .
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    image: ghcr.io/${GITHUB_REPOSITORY:-dynamicalsystem/gateway}:${IMAGE_TAG:-latest}
    env_file:
      - ${XDG_CONFIG_HOME:-~/.config}/dynamicalsystem/gateway/.env
    environment:
      # OCI configuration from env file
      TF_VAR_tenancy_ocid: ${OCI_TENANCY_OCID}
      TF_VAR_user_ocid: ${OCI_USER_OCID}
      TF_VAR_fingerprint: ${OCI_FINGERPRINT}
      TF_VAR_region: ${OCI_REGION}
      TF_VAR_compartment_ocid: ${OCI_COMPARTMENT_ID}
      TF_VAR_availability_domain: ${OCI_AVAILABILITY_DOMAIN}
      TF_VAR_ssh_public_key: ${OCI_SSH_PUBLIC_KEY}
      # XDG paths inside container
      XDG_DATA_HOME: /data
      XDG_CONFIG_HOME: /config
      XDG_STATE_HOME: /state
      TIN_NAMESPACE: ${TIN_NAMESPACE:-dynamicalsystem}
      TIN_SERVICE_NAME: ${TIN_SERVICE_NAME:-gateway}
      # Legacy mode flag
      USE_RESOURCE_MANAGER: ${USE_RESOURCE_MANAGER:-false}
      # Secret paths inside container
      OCI_PRIVATE_API_KEY: /secrets/oci_api_key.pem
      OCI_PUBLIC_SSH_KEY: /secrets/id_oci.pub
    volumes:
      # Mount XDG directories with defaults for standalone deployment
      - ${XDG_DATA_HOME:-~/.local/share}/dynamicalsystem/gateway:/data:Z
      - ${XDG_CONFIG_HOME:-~/.config}/dynamicalsystem/gateway:/config:Z
      - ${XDG_STATE_HOME:-~/.local/state}/dynamicalsystem/gateway:/state:Z
      
      # Mount secrets as read-only
      - ${XDG_DATA_HOME:-~/.local/share}/dynamicalsystem/gateway/oci/oci_api_key.pem:/secrets/oci_api_key.pem:ro
      - ${XDG_CONFIG_HOME:-~/.config}/dynamicalsystem/gateway/ssh/id_oci.pub:/secrets/id_oci.pub:ro
    command: ${USE_RESOURCE_MANAGER:+uv run main.py}
    restart: "no"
    user: ${USER_ID:-1000}:${GROUP_ID:-1000}